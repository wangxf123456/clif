# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from "clif/testing/virtual_funcs.h":

  class B:
    c: int
    @virtual
    def set_c(self, v: int)
    pos_c: int = property(`get_c`, `set_c`)

  def Bset(b: B, v: int)

  class D(B):
    pass

  class K:
    i: int
    @virtual
    def inc(self, delta: int)

  def `Kseq` as seq(k: K, step: int, stop: int) -> list<int>

  class Q:
    @virtual
    def PossiblyPush(self, data: int) -> bool

  def add_seq(q: Q, step: int, stop: int) -> int

  class AbstractClassNonDefConst:
    `my_a` as a: int
    `my_b` as b: int

    def __init__(self, a: int, b: int)

    @virtual
    def DoSomething(self) -> int

  def `DoSomething` as DoSomething1(a: AbstractClassNonDefConst) -> int

  class ClassNonDefConst:
    `my_a` as a: int
    `my_b` as b: int

    def __init__(self, a: int, b: int)

    @virtual
    def DoSomething(self) -> int

  class Manager:
    def __init__(self, c: ClassNonDefConst)
    def DoIt(self) -> int

  def `DoSomething` as DoSomething2(a: ClassNonDefConst) -> int

  def DoUniq(c: ClassNonDefConst) -> int

  class TestReturnsObject:
    @virtual
    def CreateObject(self) -> object
    @do_not_release_gil
    def GetRefcntOfResult(self) -> int
